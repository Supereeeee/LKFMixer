# general settings
name: LKFMixer_L_x2
model_type: SRModel
scale: 2
num_gpu: 1
manual_seed: 0  # 0 or 10

# python basicsr/train.py -opt options/train/train_LKFMixer_x2.yml --auto_resume

# dataset and data loader settings
datasets:
  train:
    name: DF2K
    type: PairedImageDataset
    # dataroot_gt: datasets/hr
    # dataroot_lq: datasets/lrx2
    # (for lmdb)
    dataroot_gt: datasets/DF2K/DF2K_train_HR_sub.lmdb
    dataroot_lq: datasets/DF2K/DF2K_train_LR_bicubic_X2_sub.lmdb
    filename_tmpl: '{}'
    io_backend:
      # type: disk
      # (for lmdb)
      type: lmdb

    gt_size: 96
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 14
    batch_size_per_gpu: 64
    dataset_enlarge_ratio: 100
    prefetch_mode: cuda
    pin_memory: true

  val_1:
    name: set5
    type: PairedImageDataset
    dataroot_gt: datasets/set5/mod2/GT
    dataroot_lq: datasets/set5/mod2/LRx2
    io_backend:
      type: disk
  val_2:
    name: set14
    type: PairedImageDataset
    dataroot_gt: datasets/set14/mod2/GT
    dataroot_lq: datasets/set14/mod2/LRx2
    io_backend:
      type: disk

# network structures
network_g:
  type: LKFMixer
  in_channels: 3
  channels: 64
  out_channels: 3
  upscale: 2
  num_block: 12
  large_kernel: 31
  split_factor: 0.25


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~


# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-3
    weight_decay: 0
    betas: [0.9, 0.99]


  scheduler:
    type: CosineAnnealingRestartLR
    periods: [1000000]
    estart_weights: [1]
    eta_min: !!float 1e-6


  total_iter: 1000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  fft_opt:
    type: FFTLoss
    loss_weight: 0.05
    reduction: mean


# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    PSNR: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
      better: higher
    SSIM: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
      better: higher


# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
